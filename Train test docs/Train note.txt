ALTER TABLE Persons AUTO_INCREMENT=100;

creating a etable in mysql
CREATE TABLE projects(
	project_id INT AUTO_INCREMENT, 
	name VARCHAR(100) NOT NULL,
	start_date DATE,
	end_date DATE,
	PRIMARY KEY(project_id)
);


and when multiple rows 

INSERT INTO 
	projects(name, start_date, end_date)
VALUES
	('AI for Marketing','2019-08-01','2019-12-31'),
	('ML for Sales','2019-05-15','2019-11-20');







SECUNDERABAD,KAZIPET,WARANGAL,KHAMMAM,VIJAYAWADA,RAJAMOUNDRY,VISHAKAPTNAM



SECUNDERABAD,KAZIPET,WARANGAL,KHAMMAM,VIJAYAWADA,RAJAMOUNDRY,VISHAKAPTNAM






relation between a row with same row in a tbale


CREATE TABLE employees (
  employee_id INT PRIMARY KEY,
  name VARCHAR(50),
  manager_id INT,
  FOREIGN KEY (manager_id) REFERENCES employees(employee_id)
);

INSERT INTO employees (employee_id, name, manager_id) VALUES
(1, 'John Smith', NULL),
(2, 'Jane Doe', 1),
(3, 'Bob Johnson', 2);






SELECT e.name, m.name AS manager_name
FROM employees e
LEFT JOIN employees m ON e.manager_id = m.employee_id;





switch(tcl1) {
            case "AC FIRST CLASS":
               //out.println("It\'s Sunday.");
               r1=r1+200;
               out.println("<p>"+r1+"</p>");
               out.println("<td>"+r1+"</td>");
               break;
               case "AC 2 Tier(2A)":
               r1=r1+120;
               out.println("<p>"+r1+"</p>");
               break;
                case "AC 3 Tier (3A)":
               r1=r1+80;
               out.println("<p>"+r1+"</p>");
               break;
                case "SLEEPER":
               r1=r1+40;
               out.println("<p>"+r1+"</p>");
               break;
               case "SECOND SITTING":
               r1=r1+20;
               out.println("<p>"+r1+"</p>");
               break;
            default:
               out.println("It's definetly executes.");
               //out.println("<td>"+r+"</td>");
         }07:46:PM 25-Mar-2023







   switch(tcl) {
            case "AC FIRST CLASS":
                     r=r+200;
               out.println("<p>"+r+"</p>");
               break;
               case "AC 2 Tier(2A)":
               r=r+120;
               out.println("<p>"+r+"</p>");
               break;
                case "AC 3 Tier (3A)":
               r=r+80;
               out.println("<p>"+r+"</p>");
               break;
                case "SLEEPER":
               r=r+40;
               out.println("<p>"+r+"</p>");
               break;
               case "SECOND SITTING":
               r=r+20;
               out.println("<p>"+r+"</p>");
               break;
            default:
               //out.println("It's definetly executes.");
               
         }

 switch(tt) {
            case "TATKAL":
               //out.println("It\'s Sunday.");
               r=r+50;
               out.println("<p>"+r+"</p>");
               break;
               case "PREMIUM TATKAL":
               r=r+70;
               out.println("<p>"+r+"</p>");
               break;
                case "LADIES":
               r=r-10;
               out.println("<p>"+r+"</p>");
               break;
                case "PHC":
               r=r-40;
               out.println("<p>"+r+"</p>");
               break;  
            default:
               //out.println("It's definetly executes.");   
         }













            while(rs2.next())
             {
                 out.println("<td hidden>"+rs2.getInt(1)+"</td>");
                 out.println("<td>"+rs2.getInt(2)+"</td>");
                  int r1 =rs2.getInt(1);
                  out.println("Base Fare :&nbsp"+r1);
 switch(tcl1) {
            case "AC FIRST CLASS":
               //out.println("It\'s Sunday.");
               r1=r1+200;
               out.println("<p>"+r1+"</p>");
               break;
               case "AC 2 Tier(2A)":
               r1=r1+120;
               out.println("<p>"+r1+"</p>");
               break;
                case "AC 3 Tier (3A)":
               r1=r1+80;
               out.println("<p>"+r1+"</p>");
               break;
                case "SLEEPER":
               r1=r1+40;
               out.println("<p>"+r1+"</p>");
               break;
               case "SECOND SITTING":
               r1=r1+20;
               out.println("<p>"+r1+"</p>");
               break;
            default:
               //out.println("It's definetly executes.");
              
         }
 05:55:PM 26-Mar-2023






















  <a class="active" href="#home">HOME</a>
	  <a href="ticketau.jsp">BOOK A TRAIN</a>
	  <a href="userlogin.jsp">USER LOGIN</a>
	  <a href="PNR Status">PNR STATUS</a>
	  <a href="logout.jsp"><img src="images/lo3.png" width="28"height="22" placeholder="logout" name="logout"></a>
	  
<a id="lblTime"></a>

	  <script type="text/javascript">
	  window.onload= function ()
    {
		DisplayCurrentTime();
     var today = new Date().toISOString().split('T')[0];
     document.getElementsByName("doj")[0].setAttribute('min', today);
    }
		function DisplayCurrentTime() {
		setInterval(() => {
			var date = new Date();
			var hours = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();
			var am_pm = date.getHours() >= 12 ? "PM" : "AM";
			hours = hours < 10 ? "0" + hours : hours;
			var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
			var seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();
			time = hours + ":" + minutes + ":" + seconds + " " + am_pm;
			var lblTime = document.getElementById("lblTime");
			lblTime.innerHTML = time;
			  }, 100);
		};
	</script>



admin


11:05:AM 02-Apr-2023
	  <script type="text/javascript">
	  window.onload= function ()
    {
		DisplayCurrentTime();
     var today = new Date().toISOString().split('T')[0];
     document.getElementsByName("doj")[0].setAttribute('min', today);
    }
		function DisplayCurrentTime() {
		setInterval(() => {
			var date = new Date();
			var hours = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();
			var am_pm = date.getHours() >= 12 ? "PM" : "AM";
			hours = hours < 10 ? "0" + hours : hours;
			var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
			var seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();
			time = hours + ":" + minutes + ":" + seconds + " " + am_pm;
			var lblTime = document.getElementById("lblTime");
			lblTime.innerHTML = time;
			  }, 100);
		};
	   </script>




 ps1 = con.prepareStatement("insert into train_gtickets(fstation,tstation,passengers,rs,km,time)values(?,?,?,?,?,?)");
			

<%
        
        //int trainnumber=Integer.parseInt(request.getParameter("trainnumber"));
        String s = request.getParameter("s");
        String d = request.getParameter("d");
         String gen = request.getParameter("gen");
		int passen=Integer.parseInt(request.getParameter("passen"));
		int rs=Integer.parseInt(request.getParameter("rs"));
		int km=Integer.parseInt(request.getParameter("km"));
        String dc = request.getParameter("dc");
	


        //ps1.setInt(1,);
        ps11.setString(1,s);
		ps11.setString(2,d);
        ps11.setString(3,gen);
		ps11.setInt(4,passen);
        ps11.setInt(5,rs);
        ps11.setInt(6,km);
        ps11.setString(7,dc);
	    int cnt = ps11.executeUpdate();
		  if(cnt>0)
		  {
			   out.println("<center><h2><font color=green>THE SKA RAILWAYS</font></h2></center>");
			   out.println("<center><font color=blue><h3>Ticket Successfully Cutted </h3></font></center>");
		       //out.println("<center><img src=images/train9.jpg width=600 height=350></img></center>");
               out.println("<br>");
				out.println("<center>");
                out.println("<table border=2px bgcolor=	#b0c4de width=80>");
			  out.println("<tr>");
			  out.println("<th>FROM</th>");
			  out.println("<th>TO</th>");
              out.println("<th>TICKET</th>");
			  out.println("<th>PASSENGERS</th>");
			  out.println("<th>RS</th>");
			  out.println("<th>KM</th>");
			  out.println("<th>DATE</th>");
			  out.println("</tr>");
               out.println("<tr>");
			  out.println("<td>"+s+"</td>");
			  out.println("<td>"+d+"</td>");
              out.println("<td>"+gen+"</td>");
              out.println("<td>"+passen+"</td>");
			  out.println("<td>"+rs+"</td>");
			  out.println("<td>"+km+"</td>");
			  out.println("<td>"+dc+"</td>");
			  out.println("</tr>");
			  out.println("</table>");
              out.println("</center>");

                
                
            
		    }

		     else
		   {
			  
			   out.println("<center><font color=blue><h3>GENERAL TICKET CUTTING UN SUCCESSFULL</h3></font></center>");
		       
		   }

		 
		      
%>